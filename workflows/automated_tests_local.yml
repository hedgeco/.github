# Runs automated tests on pull request Updates
name: Pull request test automation
on: pull_request

jobs:
    postman-tests-and-slack-updates:
        runs-on: self-hosted
        env:
          COLLID_ATS_AUTO: ${{secrets.ATS_AUTOMATION}}  #  All Test Suites/Automation
          COLLID_ATS_ADMIN: ${{secrets.ATS_AUTO_ADMIN}} #     Automation/Admin API/Auth
          COLLID_ATS_AUTO: ${{secrets.ATS_AUTO_CLIENT}} #     Automation/Client API/Auth
          COLLID_ATS_AUTO: ${{secrets.ATS_AUTO_NOMW}}   #     Automation/No Middleware
          COLLID_TO_RUN: ""                             #   Choice of above based on repo

          # PROOT: "https://api.getpostman.com/"
#           PAPIKEY: ${{secrets.PAPIKEY}}
#           NOPTIONS: "-r zephyr --reporter-zephyr-name Smartx_Testing_PR_autotest -x"
#           ENVID: TODO
          # FOLDER: "--folder Automated"
#           ZCROOT: "https://smartx.atlassian.net/projects/TEST?selectedItem=com.thed.zephyr.je__cycle-summary&testsTab=test-cycles-tab"
        steps:
        - name: Specify the test folder to be run.
          if: ${{github.repository == 'smartx/testing'}}
          env:
            COLLID_TO_RUN: ${{secrets.ATS_AUTOMATION}}
            FOLDER: '--folder Debug'
          run: echo ${{env.COLLID_TO_RUN}} : ${{env.FOLDER}}
        - name: Check if env vars persist
          run: echo ${{env.COLLID_TO_RUN}} : ${{env.FOLDER}}
#           run: newman run ${{env.PROOT}}collections/${{env.COLLID}}?apikey=${{env.PAPIKEY}} -e ${{env.PROOT}}environments/${{env.ENVID}}?apikey=${{env.PAPIKEY}} ${{env.NOPTIONS}} ${{env.FOLDER}}
#         - name: Run postman tests with newman --reporter-reportername-name # --name threw error, -r <reporter_name>-name="" error bad reporter
#           run: newman run ${{env.PROOT}}collections/${{env.COLLID}}?apikey=${{env.PAPIKEY}} -e ${{env.PROOT}}environments/${{env.ENVID}}?apikey=${{env.PAPIKEY}} ${{env.NOPTIONS}} ${{env.FOLDER}}


#         - name: Run postman tests with newman --reporter-reportername-name # --name threw error, -r <reporter_name>-name="" error bad reporter
#           run: newman run ${{env.PROOT}}collections/${{env.COLLID}}?apikey=${{env.PAPIKEY}} -e ${{env.PROOT}}environments/${{env.ENVID}}?apikey=${{env.PAPIKEY}} ${{env.NOPTIONS}} ${{env.FOLDER}}
#           id: ptests
#         - name: Slack Notification
#           TODO if job.fail set notify to @here
#           if: always()
#           uses: rtCamp/action-slack-notify@v2
#           env:
#             SLACK_CHANNEL: test-results
#             SLACK_USERNAME: SmarTestBot
#             SLACK_ICON: https://github.com/rtCamp.png?size=48
#             SLACK_COLOR: ${{ job.status }}
#             SLACK_MESSAGE: 'Tests ${{ job.status }} with ${{steps.ptests.outputs.NUM_FAILS}} errors. ${{env.ZCROOT}}&version.id=${{steps.ptests.outputs.CYCLE_VERSION}}&cycle.id=${{steps.ptests.outputs.CYCLE_ID}}&versionReleased=false'
#             SLACK_TITLE: ${{github.repository}}
#             SLACK_WEBHOOK: ${{secrets.SLACK_TEST_RESULTS}}
#             SLACK_LINK_NAMES : true
